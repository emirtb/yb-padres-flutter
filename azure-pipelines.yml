jobs:
  - job: 'MobileIOSAndroid'
    timeoutInMinutes: 0
    pool: 
      vmImage: 'macOS-latest'
    variables:
    - group: default
   
    steps:

#     # replace "key.properties" with your secure file name
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          echo $(keyPassword)

 
    - task: FlutterInstall@0
      displayName: "Install Flutter SDK"
      inputs:
        mode: 'auto'
        channel: 'stable'
        #version: 'custom'
        #customVersion: '2.10.5'
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          #!/usr/bin/env bash
          xcodebuild -showsdks
    
    
    # replace "ios_Profile.mobileprovision" with your secure file name
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
           $(FlutterToolPath)/flutter pub get
           rm ios/Podfile.lock
           cd ios
           pod cache clean --all
           pod install
           pod update
           #pod update
           cd ..
           #$(FlutterToolPath)/flutter clean
           #rm ios/Podfile.lock
           #$(FlutterToolPath)/flutter pub get

  

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
           $(FlutterToolPath)/flutter pub get
           rm ios/Podfile.lock
           cd ios
           pod cache clean --all
           pod install
           pod update
           #pod update
           cd ..
           #$(FlutterToolPath)/flutter clean
           #rm ios/Podfile.lock
           #$(FlutterToolPath)/flutter pub get
          

    - task: DownloadSecureFile@1
      name: plist
      displayName: 'Download plist'
      inputs:
        secureFile: 'ExportOptions.plist'
    - task: InstallAppleCertificate@2
      displayName: Install certificate
      inputs:
        certSecureFile: 'yb_cert.p12'
        certPwd: 'y8b3t4k4s3'
        keychain: 'temp'

    - task: InstallAppleProvisioningProfile@1
      displayName: Install provisioning file
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: 'flutter_7_jun_22.mobileprovision'
        removeProfile: false

  
    - task: Xcode@5
      displayName: "Code sign ipa for Distribution"
      inputs:
        actions: "build"
        xcWorkspacePath: "ios/Runner.xcworkspace"
        exportPath: "build/ios/ipa"
        #archivePath: "$(system.defaultworkingdirectory)/archive"
        scheme: "Runner"
        sdk: "iphoneos"
        configuration: "Release"
        packageApp: true
        signingOption: "manual"
        provisioningProfileName: "flutter_7_jun_22"
        signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
        provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'
        #provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'               
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          
          cd  "build/ios/ipa"
          ls
#   xcodebuild -workspace yourworkspace.xcworkspace -scheme yourScheme -archivePath $(Build.BinariesDirectory).archive.xcarchive archive       
    - task: CopyFiles@2
      displayName: "Copy app to staging directory"
      inputs:
        SourceFolder: 
        contents: 'build/ios/ipa/*.ipa'
        targetFolder: '$(Build.StagingDirectory)'
        flattenFolders: true

    - task: DownloadSecureFile@1
      name: keyprop
      displayName: Download key properties file
      inputs:
        secureFile: 'key.properties' 

#     # replace "key.jks" with your secure file name
    - task: DownloadSecureFile@1
      name: key
      displayName: Download signing key
      inputs:
        secureFile: 'YellowBox2.keystore'

#     # adjust paths and file names here
   
    - task: FlutterBuild@0
      displayName: "Build application"
      inputs:
        
        target: 'apk'
        projectDirectory: '$(Build.SourcesDirectory)'

    - task: AndroidSigning@3
      displayName: "Signing and aligning APK file(s) **/*.apk"
      inputs:
        apkFiles: "**/*.apk"
        apksign: true
        apksignerKeystoreFile: $(key.secureFilePath)
        apksignerKeystorePassword: "$(keyPassword)"
        apksignerKeystoreAlias: $(keAlias)"
        apksignerKeyPassword: "$(keyPassword)"
    # - task: CmdLine@2
    #   displayName: 'Signing and aligning AAB file(s) app\build\outputs\bundle\release\app-release.aab'
    #   inputs:
    #     script: 'jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore $(key.secureFilePath) -storepass $(keyPassword) -keypass $(keyPassword) $(system.defaultworkingdirectory)/build/app/outputs/bundle/release/app-release.aab $(keyAlias)'

    - task: CopyFiles@2
      displayName: "Copy app to staging directory"
      inputs:
        SourceFolder: 
        contents: 'release-notes.txt'
        targetFolder: '$(Build.StagingDirectory)'
        flattenFolders: true
  
    - task: CopyFiles@2
      displayName: "Copy notes"
      inputs:
        sourceFolder: '$(Agent.BuildDirectory)'
        contents: |
          **/bundle/**
          **/flutter-apk/**
        targetFolder: '$(Build.StagingDirectory)'
        flattenFolders: true


    - task: PublishBuildArtifacts@1
      displayName: "Publish AAB and IPA file"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'AABIPA'
        publishLocation: 'Container'

    - task: PublishBuildArtifacts@1
   
    # replace "ios_Profile.mobileprovision" with your secure file name
